<%
rerun = File.file?('reports/rerun.txt') ? File.read('reports/rerun.txt') : ''
rerun = rerun.strip.gsub(/\s/, ' ')
rerun_opts = rerun.empty? ? "--format #{ENV['CUCUMBER_FORMAT'] || 'progress'} features" : "--format #{ENV['CUCUMBER_FORMAT'] || 'pretty'} --format json --out reports/rerun.json --publish-quiet #{rerun}"
restricted_tags = [
  '@wip',
  '@accessibility',
  ENV['TEST_ENV'] == 'production' || ENV['TEST_ENV'] == 'local' || ENV['TEST_ENV'].nil? ? nil : '@skip-non-production'
].compact.join(' and not ')
std_opts = "--format #{ENV['CUCUMBER_FORMAT'] || 'pretty'} --strict --tags '#{ENV['TEST_ENV'] == 'production' ? '@production and ' : ''}not #{restricted_tags}' --publish-quiet "
accessibility_opts = "--format #{ENV['CUCUMBER_FORMAT'] || 'pretty'} --strict --tags '@accessibility' --publish-quiet CUCUMBER_ACCESSIBILITY=true "
smoulder_opts = "--format #{ENV['CUCUMBER_FORMAT'] || 'pretty'} --strict --tags '@smoulder#{ENV['TEST_ENV'] == 'production' ? ' and @production' : ''}' --publish-quiet "
std_report_opts = "--format json --out reports/report#{ENV['TEST_ENV_NUMBER']}.json --format rerun --out reports/rerun.txt "
parallel_report_opts = "--format json --out reports/report#{ENV['TEST_ENV_NUMBER']}.json --format ParallelTests::Cucumber::FailuresLogger --out reports/rerun.txt "
%>
default: <%= std_opts %> <%= std_report_opts %> features
wip: --tags @wip:3 --wip features --publish-quiet
rerun: <%= rerun_opts %> --format rerun --out rerun.txt --strict --tags 'not @wip'
accessibility: <%= accessibility_opts %> <%= std_report_opts %> features/accessibility
smoulder: <%= smoulder_opts %> <%= std_report_opts %> features
parallel_default: <%= std_opts %> <%= parallel_report_opts %> features
parallel_accessibility: <%= accessibility_opts %> <%= parallel_report_opts %> features/accessibility
parallel_smoulder: <%= smoulder_opts %> <%= parallel_report_opts %> features